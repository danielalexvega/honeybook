
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.0.0'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: Honeybook
* Environment: Production
* Id: f58e1d39-d212-0043-310b-606736fbccb8
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CoreContentType } from "../system/index.ts";

/**
 * ➕ Accordion item
 *
 * Id: 3877f906-4577-4e33-a386-f9bc539866b4
 * Codename: __accordion_item
 */
export type AccordionItem = CoreContentType<
  AccordionItemElementCodenames,
  {
    /**
     * Title
     *
     * Type: text
     * Required: true
     * Codename: title
     * Id: 21245c0a-5ffa-46f1-9657-dc001483fd01
     * Guidelines: Type a title for this point. It will appear in the list of all accordion points and when expanded.
     */
    readonly title: Elements.TextElement;
    /**
     * Content
     *
     * Type: rich_text
     * Required: true
     * Codename: content
     * Id: db428b5f-5e19-40a2-b696-17744ec29fba
     * Guidelines: Provide a text that will appear after the point is expanded.
     */
    readonly content: Elements.RichTextElement<CoreContentType>;
  },
  "__accordion_item"
>;

/**
 * Type representing all available element codenames for ➕ Accordion item
 */
export type AccordionItemElementCodenames = "title" | "content";

/**
 * Type guard for ➕ Accordion item
 *
 * Id: 3877f906-4577-4e33-a386-f9bc539866b4
 * Codename: __accordion_item
 */
export function isAccordionItem(item: CoreContentType | undefined | null): item is AccordionItem {
  return item?.system?.type === "__accordion_item";
}
