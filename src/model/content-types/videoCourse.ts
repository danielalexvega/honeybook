
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.0.0'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: Honeybook
* Environment: Production
* Id: f58e1d39-d212-0043-310b-606736fbccb8
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CloudinaryAsset, Person } from "./index.ts";
import type { CoreContentType } from "../system/index.ts";
import type { CourseLevel, Topics } from "../taxonomies/index.ts";

/**
 * ✏️ Video Course
 *
 * Id: 10e56631-dcce-4d70-aeae-45b53b0caf11
 * Codename: video_course
 */
export type VideoCourse = CoreContentType<
  VideoCourseElementCodenames,
  {
    /**
     * Course Title
     *
     * Type: text
     * Required: false
     * Codename: course_title
     * Id: d451c902-5da1-478a-9122-dc1f73d40e67
     */
    readonly course_title: Elements.TextElement;
    /**
     * Video
     *
     * Type: modular_content
     * Required: false
     * Codename: video
     * Id: 90d71a08-fab1-491b-94d0-78eebc8da130
     */
    readonly video: Elements.LinkedItemsElement<CloudinaryAsset>;
    /**
     * Content
     *
     * Type: rich_text
     * Required: false
     * Codename: content
     * Id: bbf440d4-65ff-4ea4-8307-dc29f8f38311
     */
    readonly content: Elements.RichTextElement<CoreContentType>;
    /**
     * Author
     *
     * Type: modular_content
     * Required: false
     * Codename: author
     * Id: 44b621ac-48eb-4fcb-be2f-afcb03970de8
     */
    readonly author: Elements.LinkedItemsElement<Person>;
    /**
     * Course Level
     *
     * Type: taxonomy
     * Required: false
     * Codename: course_level
     * Id: 6593236a-08a8-491e-8667-844761211bed
     */
    readonly course_level: Elements.TaxonomyElement<CourseLevel, "course_level">;
    /**
     * Topics
     *
     * Type: taxonomy
     * Required: false
     * Codename: topics
     * Id: cbf30ccf-ffae-4fa5-a32b-5f5f03e51df8
     */
    readonly topics: Elements.TaxonomyElement<Topics, "topics">;
  },
  "video_course"
>;

/**
 * Type representing all available element codenames for ✏️ Video Course
 */
export type VideoCourseElementCodenames = "course_title" | "video" | "content" | "author" | "course_level" | "topics";

/**
 * Type guard for ✏️ Video Course
 *
 * Id: 10e56631-dcce-4d70-aeae-45b53b0caf11
 * Codename: video_course
 */
export function isVideoCourse(item: CoreContentType | undefined | null): item is VideoCourse {
  return item?.system?.type === "video_course";
}
